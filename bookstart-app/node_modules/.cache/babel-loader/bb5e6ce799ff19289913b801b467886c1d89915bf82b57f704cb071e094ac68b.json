{"ast":null,"code":"var _jsxFileName = \"/Users/yaelkaufman/Desktop/GA/SEIR123/Projects/Project2/BookStart/bookstart-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState } from 'react';\nimport { SearchContext } from './SearchContext';\nimport Footer from './components/Footer';\n\n//create search context to capture search content\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState({\n    topic: '',\n    query: '',\n    formContent: ''\n  });\n  const [wishlist, setWishlist] = useState([]);\n  const [list, setList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n      value: {\n        search,\n        setSearch,\n        wishlist,\n        setWishlist,\n        list,\n        setList\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header-Container\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-Container\",\n        children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JTLygBJgdwmIkp1v8c4hZ139sy8=\");\n_c = App;\nexport default App;\n\n// Create a book finder app utilizng the open library  API\n// Each page needs a navigation bar at the top - each item on the navigation bar should have a Link that \n//routes to  that specific page within the app using slugs (links,routes)\n//MVP:\n//Home, search, wishlist\n//the home page should have a search bar \n//Search should display cards that feature a selection of books that meet the criteria, with the key\n//information about that book, in a grid format\n//option to click a favorite button to add to favorites list --> this will need to update favorite\n//boolean variable, as well as styling, and those need to be pulled into wish list either as a compiled\n//array or as context???\n//when clicked on, a book will open a detail page (using use effect and states like in the star wars lab) - \n//WishList shoudl appear as a grid of favorited items\n\n//stretch goals:\n//include a search for 'books like' which pulls in the details for a specific book\n//include methods of export for wishlist\n//create a reference page for free, educational online tools to get or check out books\n//create a book club function which allows you to place books in a calendar month/export in readable pdf format\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","useState","SearchContext","Footer","jsxDEV","_jsxDEV","App","_s","search","setSearch","topic","query","formContent","wishlist","setWishlist","list","setList","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yaelkaufman/Desktop/GA/SEIR123/Projects/Project2/BookStart/bookstart-app/src/App.js"],"sourcesContent":["import './App.css'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport { useState } from 'react'\nimport { SearchContext } from './SearchContext'\nimport Footer from './components/Footer'\n\n//create search context to capture search content\n\nfunction App() {\n\n  const [search, setSearch] = useState ({\n    topic:'', query:'', formContent:''\n  })\n  \n  const [wishlist, setWishlist] = useState ([])\n  const [list, setList] = useState([]);\n  \n \n  return (\n    <div className=\"App\">\n      <SearchContext.Provider value = {{search, setSearch, wishlist, setWishlist, list, setList}}> \n        <div className =\"Header-Container\">\n          <Header/>\n        </div>\n        <div className =\"Main-Container\"> \n          <Main/>\n        </div>\n      </SearchContext.Provider>\n    <Footer/>\n    </div>\n    \n    )}\n   \n\nexport default App;\n\n\n\n// Create a book finder app utilizng the open library  API\n// Each page needs a navigation bar at the top - each item on the navigation bar should have a Link that \n//routes to  that specific page within the app using slugs (links,routes)\n//MVP:\n//Home, search, wishlist\n//the home page should have a search bar \n//Search should display cards that feature a selection of books that meet the criteria, with the key\n//information about that book, in a grid format\n//option to click a favorite button to add to favorites list --> this will need to update favorite\n//boolean variable, as well as styling, and those need to be pulled into wish list either as a compiled\n//array or as context???\n//when clicked on, a book will open a detail page (using use effect and states like in the star wars lab) - \n//WishList shoudl appear as a grid of favorited items\n\n//stretch goals:\n//include a search for 'books like' which pulls in the details for a specific book\n//include methods of export for wishlist\n//create a reference page for free, educational online tools to get or check out books\n//create a book club function which allows you to place books in a calendar month/export in readable pdf format\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAE;IACpCS,KAAK,EAAC,EAAE;IAAEC,KAAK,EAAC,EAAE;IAAEC,WAAW,EAAC;EAClC,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAE,EAAE,CAAC;EAC7C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAGpC,oBACEI,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA,CAACH,aAAa,CAACiB,QAAQ;MAACC,KAAK,EAAI;QAACZ,MAAM;QAAEC,SAAS;QAAEI,QAAQ;QAAEC,WAAW;QAAEC,IAAI;QAAEC;MAAO,CAAE;MAAAE,QAAA,gBACzFb,OAAA;QAAKY,SAAS,EAAE,kBAAkB;QAAAC,QAAA,eAChCb,OAAA,CAACN,MAAM;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eACNnB,OAAA;QAAKY,SAAS,EAAE,gBAAgB;QAAAC,QAAA,eAC9Bb,OAAA,CAACL,IAAI;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACiB,eAC3BnB,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEL;AAACjB,EAAA,CAvBGD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA0BZ,eAAeA,GAAG;;AAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}